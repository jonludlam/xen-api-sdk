#
# Copyright (c) Citrix Systems, Inc.
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#   1) Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
# 
#   2) Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials
#      provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

API_MAJOR=2
API_MINOR=3
API_VER=$(API_MAJOR).$(API_MINOR)

C_GEN_FOLDER=$(BINDINGS_TMP)/c_gen
C_SRC_TMP_FOLDER=$(BINDINGS_TMP)/libxenserver
SDK_C_FOLDER=$(SDK_FOLDER)/libxenserver
C_BIN_FOLDER=$(SDK_C_FOLDER)/bin/
C_SRC_FOLDER=$(SDK_C_FOLDER)/src/

CFLAGS += $(shell xml2-config --cflags) $(shell curl-config --cflags) -W -Wall -Wmissing-prototypes -Werror -std=c99 -g -O2

COMPAT_PATCH = compat.patch

if $(defined-env COMPILE_C)
  COMPILE_C = $(getenv COMPILE_C)
  export
else
  COMPILE_C = yes
  export

section
  OCamlProgram(gen_c_binding, gen_c_binding helper ../licence)


.PHONY: c_source
c_source: gen_c_binding
  rm -Rf $(C_SRC_TMP_FOLDER)
  mkdir -p $(C_SRC_TMP_FOLDER)/include
  mkdir -p $(C_SRC_TMP_FOLDER)/src
  mkdir -p $(C_SRC_TMP_FOLDER)/test
  if $(equal $(COMPILE_C), yes)
    rm -Rf $(C_GEN_FOLDER)
    mkdir -p $(C_GEN_FOLDER)
    ./gen_c_binding -d $(C_GEN_FOLDER)
    (cd $(C_GEN_FOLDER) && patch -p0 <$(COMPAT_PATCH))
    cp -r $(C_GEN_FOLDER)/xen $(C_SRC_TMP_FOLDER)/include
    cp $(C_GEN_FOLDER)/*.h $(C_SRC_TMP_FOLDER)/include
    cp $(C_GEN_FOLDER)/*.c $(C_SRC_TMP_FOLDER)/src
    sed -e s/@LIB_MAJOR@/$(API_MAJOR)/g -e s/@LIB_MINOR@/$(API_MINOR)/g -e s/@LIB_NAME@/xenserver/g Makefile.dist > $(C_SRC_TMP_FOLDER)/Makefile
    cp xen_internal.h $(C_SRC_TMP_FOLDER)/include
    cp xen_common.h xen_string_set.h xen_int_set.h $(C_SRC_TMP_FOLDER)/include/xen/api
    cp xen_common.c xen_string_set.c xen_int_set.c $(C_SRC_TMP_FOLDER)/src
    cp test/*.c $(C_SRC_TMP_FOLDER)/test
    make -C $(C_SRC_TMP_FOLDER) -f Makefile uberheader
  cd $(BINDINGS_TMP) && tar cjf $(MY_OUTPUT_DIR)/libxenserver-src.tar.bz2 libxenserver
  mkdir -p $(C_SRC_FOLDER) && cp -r $(C_SRC_TMP_FOLDER)/* $(C_SRC_FOLDER)
  sed -e 's/@SDK_VERSION@/$(SDK_VERSION)/g' README.dist >$(SDK_C_FOLDER)/README
  cp ../LICENSE $(SDK_C_FOLDER)/COPYING

.PHONY: c_binaries
c_binaries:  c_source
  if $(equal $(COMPILE_C), yes)
    make -C $(C_SRC_TMP_FOLDER) -f Makefile libxenserver.so
  else
    touch $(C_SRC_TMP_FOLDER)/libxenserver.so $(C_SRC_TMP_FOLDER)/libxenserver.so.$(API_MAJOR) $(C_SRC_TMP_FOLDER)/libxenserver.so.$(API_VER)
    touch $(addprefix $(SDK_C_FOLDER)/, COPYING README)
  cd $(BINDINGS_TMP) && tar cjf $(MY_OUTPUT_DIR)/libxenserver-bin.tar.bz2 $(addprefix libxenserver/, libxenserver.so libxenserver.so.$(API_MAJOR) libxenserver.so.$(API_VER))
  mkdir -p $(C_BIN_FOLDER) && cp $(addprefix $(C_SRC_TMP_FOLDER)/, libxenserver.so libxenserver.so.$(API_MAJOR) libxenserver.so.$(API_VER)) $(C_BIN_FOLDER)

.PHONY: c_folders
c_folders: c_binaries c_source

.PHONY: clean
clean:
  rm -f *.annot *.o *.cmi *.cmx *.cmo *.cma *.cmxa *.run *.omc
  rm -f gen_c_binding
